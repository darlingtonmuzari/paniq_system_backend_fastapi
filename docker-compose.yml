version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: panic-system-db
    environment:
      POSTGRES_DB: panic_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d panic_system"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: panic-system-redis
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Main API application - REMOVED FOR LOCAL DEVELOPMENT
  # Run manually with: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for background tasks
  celery:
    build:
      context: .
      target: development
    container_name: panic-system-celery
    command: celery -A app.core.celery worker --loglevel=info --concurrency=4
    environment:
      # Database and Redis URLs for Docker services
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/panic_system
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      
      # Email/SMTP Configuration
      - SMTP_SERVER=mail.paniq.co.za
      - SMTP_PORT=587
      - SMTP_USERNAME=no-reply@paniq.co.za
      - SMTP_PASSWORD=14Dmin@2025
      - FROM_EMAIL=no-reply@paniq.co.za
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      target: development
    container_name: panic-system-celery-beat
    command: celery -A app.core.celery beat --loglevel=info
    environment:
      # Database and Redis URLs for Docker services
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/panic_system
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      
      # Email/SMTP Configuration
      - SMTP_SERVER=mail.paniq.co.za
      - SMTP_PORT=587
      - SMTP_USERNAME=no-reply@paniq.co.za
      - SMTP_PASSWORD=14Dmin@2025
      - FROM_EMAIL=no-reply@paniq.co.za
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - ./logs:/app/logs
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: panic-system-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: panic-system-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: panic-system-network
    driver: bridge